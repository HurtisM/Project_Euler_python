#Problem 2
#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
# the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89,...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

def even_fibonacci_numbers(limit):
    fibonacci_sequence = [0, 1]
    sum_even = 0
    while fibonacci_sequence[-1] + fibonacci_sequence[-2] < limit:
        next_number = fibonacci_sequence[-1] + fibonacci_sequence[-2]
        fibonacci_sequence[-2] = fibonacci_sequence[-1]
        fibonacci_sequence[-1] = next_number
        if next_number %2 == 0:
            sum_even += next_number

    return sum_even




if __name__ == "__main__":
    limit = 4000000
    print(f"The Fibonacci numbers less than {limit} are: {even_fibonacci_numbers(limit)}")